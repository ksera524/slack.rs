name: Build and Push to Harbor

on:
  push:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: slack-rs-runners

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup kubectl (if not available)
        run: |
          # kubectlがない場合はインストール
          if ! command -v kubectl &> /dev/null; then
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
          fi

      - name: Setup Harbor CA Certificate
        run: |
          # Kubernetesからシークレットを取得
          kubectl get secret harbor-tls-secret -n harbor -o jsonpath='{.data.tls\.crt}' | base64 -d > harbor.crt
          
          # Docker証明書ディレクトリを作成
          sudo mkdir -p /etc/docker/certs.d/192.168.122.100
          sudo cp harbor.crt /etc/docker/certs.d/192.168.122.100/ca.crt
          
          # containerd証明書ディレクトリも作成
          sudo mkdir -p /etc/containerd/certs.d/192.168.122.100
          sudo cp harbor.crt /etc/containerd/certs.d/192.168.122.100/ca.crt
          
          # containerd hosts.toml設定
          sudo tee /etc/containerd/certs.d/192.168.122.100/hosts.toml << EOF
          server = "https://192.168.122.100"
          
          [host."https://192.168.122.100"]
            capabilities = ["pull", "resolve", "push"]
            ca = "/etc/containerd/certs.d/192.168.122.100/ca.crt"
            skip_verify = false
          EOF
          
          # システムCA証明書にも追加
          sudo cp harbor.crt /usr/local/share/ca-certificates/harbor.crt
          sudo update-ca-certificates
          
          # containerdの再起動をスキップ (systemdが利用できない環境)
          echo "containerd restart skipped - systemd not available"

      - name: Login to Harbor with CA Certificate
        run: |
          echo "Harbor12345" | docker login 192.168.122.100 -u admin --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t 192.168.122.100/sandbox/slack-rs:latest .
          docker push 192.168.122.100/sandbox/slack-rs:latest
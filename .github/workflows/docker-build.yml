# GitHub Actions workflow for slack.rs - Simple CA Certificate Approach
# 最もシンプルなHarbor CA証明書配布アプローチ

name: slack.rs Simple CA Certificate

on:
  workflow_dispatch:
  push:
    branches: [ master, main, develop ]

jobs:
  build-and-push:
    runs-on: slack.rs-runners
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: kubectl インストール
      run: |
        echo "=== kubectl インストール ==="
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        kubectl version --client
        echo "✅ kubectl インストール完了"
        
    - name: Harbor証明書セットアップ
      run: |
        echo "=== Harbor証明書セットアップ ==="
        
        # kubectl設定
        export KUBECONFIG=/tmp/kubeconfig
        kubectl config set-cluster default \
            --server=https://kubernetes.default.svc \
            --certificate-authority=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt \
            --kubeconfig=$KUBECONFIG
        kubectl config set-credentials default \
            --token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token) \
            --kubeconfig=$KUBECONFIG
        kubectl config set-context default \
            --cluster=default --user=default \
            --kubeconfig=$KUBECONFIG
        kubectl config use-context default --kubeconfig=$KUBECONFIG
        
        # Harbor認証情報取得
        kubectl get secret harbor-auth -n arc-systems -o yaml | grep "HARBOR_USERNAME:" | awk '{print $2}' | base64 -d > /tmp/harbor_username
        kubectl get secret harbor-auth -n arc-systems -o yaml | grep "HARBOR_PASSWORD:" | awk '{print $2}' | base64 -d > /tmp/harbor_password
        kubectl get secret harbor-auth -n arc-systems -o yaml | grep "HARBOR_URL:" | awk '{print $2}' | base64 -d > /tmp/harbor_url
        kubectl get secret harbor-auth -n arc-systems -o yaml | grep "HARBOR_PROJECT:" | awk '{print $2}' | base64 -d > /tmp/harbor_project
        
        HARBOR_URL=$(cat /tmp/harbor_url)
        
        # Harbor CA証明書取得（新しいConfigMapから）
        kubectl get configmap harbor-ca-cert -n arc-systems -o jsonpath='{.data.ca\.crt}' > /tmp/harbor-ca.crt
        
        echo "CA証明書取得: $(wc -c < /tmp/harbor-ca.crt) bytes"
        
        # Docker用証明書ディレクトリ作成
        sudo mkdir -p /etc/docker/certs.d/$HARBOR_URL
        sudo cp /tmp/harbor-ca.crt /etc/docker/certs.d/$HARBOR_URL/ca.crt
        sudo chmod 644 /etc/docker/certs.d/$HARBOR_URL/ca.crt
        
        # harbor.local用にも作成
        sudo mkdir -p /etc/docker/certs.d/harbor.local
        sudo cp /tmp/harbor-ca.crt /etc/docker/certs.d/harbor.local/ca.crt
        sudo chmod 644 /etc/docker/certs.d/harbor.local/ca.crt
        
        # システム証明書ストアに追加
        sudo cp /tmp/harbor-ca.crt /usr/local/share/ca-certificates/harbor.crt
        sudo update-ca-certificates
        
        # /etc/hostsにharbor.localを追加
        echo "$HARBOR_URL harbor.local" | sudo tee -a /etc/hosts
        
        # Docker daemon再起動して証明書を有効化
        sudo systemctl restart docker
        sleep 5
        
        echo "✅ Harbor証明書セットアップ完了"
        
    - name: Docker Login
      run: |
        echo "=== Docker Login ==="
        
        HARBOR_USERNAME=$(cat /tmp/harbor_username)
        HARBOR_PASSWORD=$(cat /tmp/harbor_password)
        HARBOR_URL=$(cat /tmp/harbor_url)
        
        # Docker config作成
        mkdir -p ~/.docker
        echo "{\"auths\":{\"$HARBOR_URL\":{\"auth\":\"$(echo -n \"$HARBOR_USERNAME:$HARBOR_PASSWORD\" | base64 -w 0)\"}},\"credHelpers\":{}}" > ~/.docker/config.json
        chmod 600 ~/.docker/config.json
        
        # HTTPS接続テスト
        echo "Harbor HTTPS接続テスト:"
        curl --cacert /tmp/harbor-ca.crt -I https://$HARBOR_URL/v2/ 2>&1 || echo "HTTPS接続エラー（予想通り）"
        
        # Docker login
        echo "Docker login実行:"
        echo "$HARBOR_PASSWORD" | docker login $HARBOR_URL --username "$HARBOR_USERNAME" --password-stdin
        
        echo "✅ Docker Login完了"
        
    - name: Docker Build and Push
      run: |
        echo "=== Docker Build and Push ==="
        
        HARBOR_URL=$(cat /tmp/harbor_url)
        HARBOR_PROJECT=$(cat /tmp/harbor_project)
        
        # Docker build
        docker build -t $HARBOR_URL/$HARBOR_PROJECT/slack.rs:latest .
        docker build -t $HARBOR_URL/$HARBOR_PROJECT/slack.rs:${{ github.sha }} .
        
        # Docker push
        docker push $HARBOR_URL/$HARBOR_PROJECT/slack.rs:latest
        docker push $HARBOR_URL/$HARBOR_PROJECT/slack.rs:${{ github.sha }}
        
        echo "✅ Docker Build and Push完了"
        
    - name: 結果確認
      run: |
        echo "=== 結果確認 ==="
        
        HARBOR_USERNAME=$(cat /tmp/harbor_username)
        HARBOR_PASSWORD=$(cat /tmp/harbor_password)  
        HARBOR_URL=$(cat /tmp/harbor_url)
        HARBOR_PROJECT=$(cat /tmp/harbor_project)
        
        # Harbor APIでイメージ確認
        curl -u $HARBOR_USERNAME:$HARBOR_PASSWORD https://$HARBOR_URL/v2/$HARBOR_PROJECT/slack.rs/tags/list
        
        echo "✅ プッシュ完了"
        
    - name: クリーンアップ
      if: always()
      run: |
        rm -f /tmp/harbor_* /tmp/kubeconfig /tmp/harbor-ca.crt